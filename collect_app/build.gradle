apply plugin: 'com.android.application'
apply from: '../config/quality.gradle'


import com.android.ddmlib.DdmPreferences
DdmPreferences.setTimeOut(60000)

ant.condition(property: 'os', value: 'windows') {
    os(family: 'windows')
}
ant.condition(property: 'os', value: 'unix') {
    os(family: 'unix')
}


def secretsFile = file('secrets.properties')
def secrets = new Properties()
if (secretsFile.exists()) {
    secrets.load(new FileInputStream(secretsFile))
}

android {
    compileSdkVersion(25)
    buildToolsVersion('25.0.2')


    defaultConfig {
        applicationId "org.smap.smapTask.android"
        minSdkVersion(16)
        targetSdkVersion(22)
        versionCode(5003)
        versionName getVersionName()
        testInstrumentationRunner('android.support.test.runner.AndroidJUnitRunner')
        multiDexEnabled true
    }

    productFlavors {
        standard {
            applicationId "org.smap.smapTask.android"
            versionName "5.03"
        }
        plan {
            applicationId "org.smap.smapTask.android.plan"
            versionName "5.03-plan"
        }
        kontrolid {
            applicationId "org.smap.smapTask.android.kontrolid"
            versionName "5.03-kontrolid"
        }
        pop {
            applicationId "org.smap.smapTask.android.pop"
            versionName "5.03-pop"
        }
    }

    buildTypes {
        release {
            buildConfigField("String", "SENDER_ID", "\""+secrets['SENDER_ID']+"\"")    // smap
            buildConfigField("String", "AWS_MOBILEHUB_USER_AGENT", "\""+secrets['AWS_MOBILEHUB_USER_AGENT']+"\"")    // smap
            buildConfigField("String", "AMAZON_COGNITO_REGION", "\""+secrets['AMAZON_COGNITO_REGION']+"\"")    // smap
            buildConfigField("String", "AMAZON_COGNITO_IDENTITY_POOL_ID", "\""+secrets['AMAZON_COGNITO_IDENTITY_POOL_ID']+"\"")    // smap
            buildConfigField("String", "AMAZON_DYNAMODB_REGION", "\""+secrets['AMAZON_DYNAMODB_REGION']+"\"")    // smap


            minifyEnabled(true)
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            testCoverageEnabled false    // smap
        }
        debug {
            buildConfigField("String", "SENDER_ID", "\""+secrets['SENDER_ID']+"\"")    // smap
            buildConfigField("String", "AWS_MOBILEHUB_USER_AGENT", "\""+secrets['AWS_MOBILEHUB_USER_AGENT']+"\"")    // smap
            buildConfigField("String", "AMAZON_COGNITO_REGION", "\""+secrets['AMAZON_COGNITO_REGION']+"\"")    // smap
            buildConfigField("String", "AMAZON_COGNITO_IDENTITY_POOL_ID", "\""+secrets['AMAZON_COGNITO_IDENTITY_POOL_ID']+"\"")    // smap
            buildConfigField("String", "AMAZON_DYNAMODB_REGION", "\""+secrets['AMAZON_DYNAMODB_REGION']+"\"")    // smap


            debuggable(true)
            // Allows AndroidTest JaCoCo reports to be generated
            //testCoverageEnabled(true)  // smap
            testCoverageEnabled(false)    // smap
            //minifyEnabled(true)
            minifyEnabled(false)
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    // https://stackoverflow.com/a/27119543/152938
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def file = output.outputFile
            output.outputFile = new File(file.parent, file.name.replace("_app","").replace(".apk", "-" + defaultConfig.versionName + ".apk"))
        }
    }

    packagingOptions {
        // Pick first occurrence of any files that cause conflicts, as defined
        // in common.gradle
        pickFirst 'META-INF/DEPENDENCIES'
        pickFirst 'META-INF/LICENSE'
        pickFirst 'META-INF/LICENSE.txt'
        pickFirst 'META-INF/NOTICE'
        pickFirst 'META-INF/NOTICE.txt'
        pickFirst 'META-INF/services/com.fasterxml.jackson.core.JsonFactory'
        pickFirst 'META-INF/services/com.fasterxml.jackson.core.ObjectCodec'
        pickFirst 'META-INF/services/javax.ws.rs.ext.MessageBodyReader'
        pickFirst 'META-INF/services/javax.ws.rs.ext.MessageBodyWriter'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    dexOptions {
        javaMaxHeapSize '2048M'
    }

    lintOptions {
        disable 'MissingTranslation', 'ExtraTranslation'    // smap
        abortOnError true
    }
}

// Required to use fileExtensions property in checkstyle file
//checkstyle.toolVersion = '7.6.1'  smap

// The normal check task reports nothing probably because Android uses its own sourceSets
//task checkstyle(type: Checkstyle) {
//    source 'src'
    // empty classpath because we don't want to check compiled classes
//    classpath = files()
//}

configurations.all {
    resolutionStrategy {
        cacheDynamicVersionsFor(0, 'seconds')
        cacheChangingModulesFor(0, 'seconds')
    }
    transitive = true
}

allprojects {
    tasks.withType(JavaCompile) {
        options.compilerArgs << '-Xlint:all'
    }
}


dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile group: 'com.android.support', name: 'appcompat-v7', version: '25.3.1'
    compile group: 'com.android.support', name: 'design', version: '25.3.1'
    compile group: 'com.android.support', name: 'cardview-v7', version: '25.3.1'
    compile group: 'com.android.support', name: 'multidex', version: '1.0.1'
    //compile group: 'com.google.android.gms', name: 'play-services-analytics', version: '10.0.1' // smap
    compile group: 'com.google.android.gms', name: 'play-services-auth', version: '10.0.1'
    compile group: 'com.google.android.gms', name: 'play-services-maps', version: '10.0.1'
    compile group: 'com.google.android.gms', name: 'play-services-gcm', version: '10.0.1'    // smap
    compile (group: 'com.google.code.gson', name: 'gson', version: '2.6.2'){
        exclude group: 'org.apache.httpcomponents'
    }
    //compile group: 'com.google.firebase', name: 'firebase-core', version: '10.0.1'    // smap
    // compile group: 'com.google.firebase', name: 'firebase-crash', version: '10.0.1'  // smap
    compile (group: 'com.google.http-client', name: 'google-http-client', version: '1.22.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    compile (group: 'com.google.oauth-client', name: 'google-oauth-client', version: '1.22.0') {
        exclude group: 'org.apache.httpcomponents'
    }

    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile group: 'joda-time', name: 'joda-time', version: '2.9.7'
    compile group: 'net.sf.kxml', name: 'kxml2', version: '2.3.0'
    compile group: 'net.sf.opencsv', name: 'opencsv', version: '2.3'
    compile group: 'org.opendatakit', name: 'opendatakit-javarosa', version: '2.5.0-SNAPSHOT'
    compile group: 'org.osmdroid', name: 'osmdroid-android', version: '5.6.4'
    compile group: 'org.slf4j', name: 'slf4j-android', version: '1.6.1-RC1'
    compile group: 'pub.devrel', name: 'easypermissions', version: '0.2.1'
    compile(group: 'com.google.api-client', name: 'google-api-client-android', version: '1.22.0') { exclude group: 'org.apache.httpcomponents' }
    compile(group: 'com.google.apis', name: 'google-api-services-drive', version: 'v3-rev64-1.22.0') { exclude group: 'org.apache.httpcomponents' }
    compile(group: 'com.google.apis', name: 'google-api-services-sheets', version: 'v4-rev463-1.22.0') { exclude group: 'org.apache.httpcomponents' }
    compile group: 'com.jakewharton.timber', name: 'timber', version: '4.5.1'
    compile group: 'com.android.support', name: 'customtabs', version: '25.3.1'
    compile group: 'com.android.support', name: 'design', version: '25.3.1'
    compile group: 'com.google.zxing', name: 'core', version: '3.2.0'
    compile group: 'com.journeyapps', name: 'zxing-android-embedded', version: '3.5.0'
    compile group: 'com.android.support', name: 'support-v13', version: '25.3.1'

    // smap aws
    compile 'com.amazonaws:aws-android-sdk-core:2.4.2'
    // add the DynamoDB SDK and DynamoDB Object Mapper dependency
    compile 'com.amazonaws:aws-android-sdk-ddb:2.4.2'
    compile 'com.amazonaws:aws-android-sdk-ddb-mapper:2.4.2'
    compile project(':AWSMobileHelper')

    // Testing-only dependencies
    // testCompile group: 'junit', name: 'junit', version: '4.12'
    // testCompile group: 'org.mockito', name: 'mockito-core', version: '2.8.47'
    // testCompile group: 'org.robolectric', name: 'robolectric', version: '3.4'
    // testCompile group: 'org.robolectric', name: 'shadows-multidex', version: '3.3.2'
    // androidTestCompile group: 'com.android.support', name: 'support-annotations', version: '25.3.1'
    // androidTestCompile group: 'com.android.support.test', name: 'runner', version: '0.5'
    // androidTestCompile group: 'com.android.support.test', name: 'rules', version: '0.5'
    // androidTestCompile group: 'com.squareup.okhttp3', name: 'mockwebserver', version: '3.2.0'
}

// Must be at bottom to prevent dependency collisions
// https://developers.google.com/android/guides/google-services-plugin
apply plugin: 'com.google.gms.google-services'
